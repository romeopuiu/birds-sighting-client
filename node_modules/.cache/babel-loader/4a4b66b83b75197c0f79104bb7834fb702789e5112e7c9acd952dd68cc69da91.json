{"ast":null,"code":"import axios from \"axios\";\nimport Sighting from \"../../models/Sighting\";\nexport const fetchSightingsByBirdName = async birdName => {\n  try {\n    const encodedBirdName = encodeURIComponent(birdName);\n    const response = await axios.get(`http://localhost:8080/api/birds/search-by-name/sightings?birdName=${encodedBirdName}`);\n    return response.data.map(item => new Sighting(item.id, item.bird, item.location, item.dateTime));\n  } catch (error) {\n    console.error(\"Error fetching sightings:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","Sighting","fetchSightingsByBirdName","birdName","encodedBirdName","encodeURIComponent","response","get","data","map","item","id","bird","location","dateTime","error","console"],"sources":["D:/SpirentVelocity-iTest/birds-sighting-client/src/components/sighting/SightingService.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport Sighting from \"../../models/Sighting\";\r\n\r\n\r\nexport const fetchSightingsByBirdName = async (birdName: string): Promise<Sighting[]> => {\r\n  try {\r\n    const encodedBirdName = encodeURIComponent(birdName);\r\n    const response = await axios.get(`http://localhost:8080/api/birds/search-by-name/sightings?birdName=${encodedBirdName}`);\r\n    return response.data.map((item: any) => new Sighting(item.id, item.bird, item.location, item.dateTime));\r\n  } catch (error) {\r\n    console.error(\"Error fetching sightings:\", error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAG5C,OAAO,MAAMC,wBAAwB,GAAG,MAAOC,QAAgB,IAA0B;EACvF,IAAI;IACF,MAAMC,eAAe,GAAGC,kBAAkB,CAACF,QAAQ,CAAC;IACpD,MAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,qEAAqEH,eAAe,EAAE,CAAC;IACxH,OAAOE,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,IAAS,IAAK,IAAIT,QAAQ,CAACS,IAAI,CAACC,EAAE,EAAED,IAAI,CAACE,IAAI,EAAEF,IAAI,CAACG,QAAQ,EAAEH,IAAI,CAACI,QAAQ,CAAC,CAAC;EACzG,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}